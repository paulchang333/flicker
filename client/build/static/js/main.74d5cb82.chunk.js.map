{"version":3,"sources":["pages/ResultsPage/ResultsPage.js","pages/JoinSessionPage/JoinSessionPage.js","components/OptionSelect/OptionSelect.js","pages/SessionPage/SessionPage.js","pages/WaitingPage/WaitingPage.js","context/UserContext.js","context/ShowContext.js","pages/HomePage/HomePage.js","components/ErrorNotice/ErrorNotice.js","pages/RegisterPage/RegisterPage.js","pages/LoginPage/LoginPage.js","assets/images/spinner.gif","components/FullPageLoader/FullPageLoader.js","components/ShowCards/ShowCards.js","pages/FinalResultsPage/FinalResultsPage.js","components/TypeSelect/TypeSelect.js","components/GenreItem/GenreItem.js","components/GenreList/GenreList.js","components/SelectedGenreItem/SelectedGenreItem.js","components/SelectedGenresList/SelectedGenresList.js","components/GenreSelect/GenreSelect.js","App.routes.js","components/AuthOptions/AuthOptions.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["socket","UserContext","createContext","UserProvider","children","useState","token","undefined","user","userData","setUserData","checkLoggedIn","a","localStorage","getItem","setItem","axios","post","headers","data","get","userRes","useEffect","Provider","value","ShowContext","ShowProvider","isMovie","isSeries","selectedGenres","results","showData","setShowData","HomePage","props","useContext","history","useHistory","push","className","onClick","ErrorNotice","message","clearError","RegisterPage","name","setName","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","error","setError","submit","e","preventDefault","newUser","loginRes","response","msg","onSubmit","htmlFor","id","type","onChange","target","placeholder","LoginPage","loginUser","FullPageLoader","src","spinner","alt","ShowCards","displayedResults","setDisplayedResults","lastDirection","setLastDirection","ENDPOINT","window","location","hostname","creator","roomCode","displayedResultsInit","io","emit","swiped","direction","swipedShowData","find","show","netflixid","roomid","userid","resultsArr","length","map","preventSwipe","onSwipe","dir","onCardLeftScreen","filter","style","backgroundImage","image","dangerouslySetInnerHTML","__html","title","synopsis","released","runtime","ResultsPage","isLoader","setIsLoader","queryString","parse","search","genreIds","i","mediaType","fetchData","prevData","apiUrl","forEach","options","params","q","t","cl","st","ob","p","sa","process","then","page","numberPages","Math","ceil","COUNT","resultsOptions","ITEMS","item","rating","parseFloat","Map","values","sort","b","catch","console","loaderTimer","setTimeout","clearTimeout","on","res","FinalResultsPage","acceptedShows","setAcceptedShows","numberAcceptedShows","setNumberAcceptedShows","recommendedIndex","setRecommendedIndex","fetchAccepted","key","rawAcceptedShows","acceptedShowData","v","findIndex","acceptedShowCount","acceptedShowCountArr","count","finalAcceptedShows","obj","o","recommendedShow","renderRecommended","nextRecommendation","resetRecommendations","JoinSessionPage","setRoomCode","found","setFound","roomFound","roomID","TypeSelect","checked","isMovieHandler","isSeriesHandler","GenreItem","selected","setSelected","genre","updateSelectedGenres","setKeyword","GenreList","keyword","genreList","SelectedGenreItem","filtered","removeGenre","icon","faMinus","SelectedGenresList","GenreSelect","genreListDefault","toLowerCase","includes","slice","setGenreList","updateGenreList","some","selectedGenre","OptionSelect","setGenreListDefault","fetchGenres","method","url","genresArr","request","Object","keys","join","room","SessionPage","ready","setReady","random","toString","substring","users","roomUsers","document","getElementById","innerHTML","WaitingPage","Routes","routes","path","Component","route","exact","component","AuthOptions","Header","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iiBAWIA,ECHAA,ECEAA,ECDAA,ECDAA,E,sGCLEC,EAAcC,wBAAc,IAE5BC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLC,mBAAS,CACvCC,WAAOC,EACPC,UAAMD,IAH6B,mBAC9BE,EAD8B,KACpBC,EADoB,KAM/BC,EAAa,uCAAG,8BAAAC,EAAA,6DAIN,QAHVN,EAAQO,aAAaC,QAAQ,iBAI/BD,aAAaE,QAAQ,aAAc,IACnCT,EAAQ,IANU,SAUGU,IAAMC,KAAK,0BAA2B,KAAM,CACjEC,QAAS,CAAE,eAAgBZ,KAXT,kBAcPa,KAdO,iCAeIH,IAAMI,IAAI,0BAA2B,CACzDF,QAAS,CAAE,eAAgBZ,KAhBX,OAeZe,EAfY,OAkBlBX,EAAY,CAAEJ,QAAOE,KAAMa,EAAQF,OAlBjB,4CAAH,qDA0BnB,OAJAG,qBAAU,WACRX,MACC,IAGD,cAACV,EAAYsB,SAAb,CAAsBC,MAAO,CAAEf,WAAUC,eAAzC,SACGN,KCrCDqB,EAAcvB,wBAAc,CAAC,GAAI,eAEjCwB,EAAe,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,EACLC,mBAAS,CACvCsB,SAAS,EACTC,UAAU,EACVC,eAAgB,GAChBC,QAAS,KAL0B,mBAC9BC,EAD8B,KACpBC,EADoB,KAQrC,OACE,cAACP,EAAYF,SAAb,CAAsBC,MAAO,CAAEO,WAAUC,eAAzC,SACG5B,K,OCoBQ6B,G,MA5BE,SAACC,GAAW,IACnBzB,EAAa0B,qBAAWlC,GAAxBQ,SACF2B,EAAUC,cAQhB,OAPAf,qBAAU,WAEHb,EAASD,MACZ4B,EAAQE,KAAK,aAKf,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,mBAAd,iCACA,oBAAIA,UAAU,yBAAd,oEAGA,sBAAKA,UAAU,wBAAf,UACE,wBAAQC,QAAS,kBAAMJ,EAAQE,KAAK,0BAApC,2BAGA,wBAAQE,QAAS,kBAAMJ,EAAQE,KAAK,UAApC,oCCdKG,G,cATK,SAACP,GACnB,OACE,sBAAKK,UAAU,eAAf,UACE,+BAAOL,EAAMQ,UACb,wBAAQF,QAASN,EAAMS,WAAvB,oBCmFSC,EAnFM,WAAO,IAAD,EACDvC,mBAAS,IADR,mBAClBwC,EADkB,KACZC,EADY,OAECzC,mBAAS,IAFV,mBAElB0C,EAFkB,KAEXC,EAFW,OAGO3C,mBAAS,IAHhB,mBAGlB4C,EAHkB,KAGRC,EAHQ,OAIiB7C,mBAAS,IAJ1B,mBAIlB8C,EAJkB,KAIHC,EAJG,OAKC/C,mBAAS,IALV,mBAKlBgD,EALkB,KAKXC,EALW,KAOjB5C,EAAgByB,qBAAWlC,GAA3BS,YAEF0B,EAAUC,cAEVkB,EAAM,uCAAG,WAAOC,GAAP,iBAAA5C,EAAA,6DACb4C,EAAEC,iBADW,SAILC,EAAU,CAAEb,OAAME,QAAOE,WAAUE,iBAJ9B,SAMLnC,IAAMC,KAAK,sBAAuByC,GAN7B,uBAOY1C,IAAMC,KAAK,mBAAoB,CACpD8B,QACAE,aATS,OAOLU,EAPK,OAYXjD,EAAY,CAAEJ,MAAOqD,EAASxC,KAAKb,MAAOE,KAAMmD,EAASxC,KAAKX,OAE9DK,aAAaE,QAAQ,aAAc4C,EAASxC,KAAKb,OAEjDO,aAAaE,QAAQ,UAAW,IAGhCqB,EAAQE,KAAK,KAnBF,kDAqBP,KAAIsB,SAASzC,KAAK0C,KACpBP,EAAS,KAAIM,SAASzC,KAAK0C,KAtBlB,0DAAH,sDAgCZ,OALAvC,qBAAU,WAERT,aAAaE,QAAQ,UAAW,MAC/B,IAGD,sBAAKwB,UAAU,OAAf,UACE,0CACA,uBAAMA,UAAU,2BAA2BuB,SAAUP,EAArD,UACE,uBAAOQ,QAAQ,gBAAf,uBACA,uBACEC,GAAG,gBACHC,KAAK,OACLC,SAAU,SAACV,GAAD,OAAOV,EAAQU,EAAEW,OAAO3C,UAGpC,uBAAOuC,QAAQ,iBAAf,mBACA,uBACEC,GAAG,iBACHC,KAAK,QACLC,SAAU,SAACV,GAAD,OAAOR,EAASQ,EAAEW,OAAO3C,UAGrC,uBAAOuC,QAAQ,oBAAf,sBACA,uBACEC,GAAG,oBACHC,KAAK,WACLC,SAAU,SAACV,GAAD,OAAON,EAAYM,EAAEW,OAAO3C,UAExC,uBACEyC,KAAK,WACLG,YAAY,kBACZF,SAAU,SAACV,GAAD,OAAOJ,EAAiBI,EAAEW,OAAO3C,UAG7C,uBAAOyC,KAAK,SAASzC,MAAM,gBAG5B6B,GACC,cAAC,EAAD,CAAaX,QAASW,EAAOV,WAAY,kBAAMW,OAAS/C,UCdjD8D,G,OA/DG,WAAO,IAAD,EACIhE,wBAASE,GADb,mBACfwC,EADe,KACRC,EADQ,OAEU3C,wBAASE,GAFnB,mBAEf0C,EAFe,KAELC,EAFK,OAGI7C,wBAASE,GAHb,mBAGf8C,EAHe,KAGRC,EAHQ,KAKd5C,EAAgByB,qBAAWlC,GAA3BS,YAEF0B,EAAUC,cAEVkB,EAAM,uCAAG,WAAOC,GAAP,iBAAA5C,EAAA,6DACb4C,EAAEC,iBADW,SAILa,EAAY,CAAEvB,QAAOE,YAJhB,SAKYjC,IAAMC,KAAK,mBAAoBqD,GAL3C,OAKLX,EALK,OAOXjD,EAAY,CAAEJ,MAAOqD,EAASxC,KAAKb,MAAOE,KAAMmD,EAASxC,KAAKX,OAG9DK,aAAaE,QAAQ,aAAc4C,EAASxC,KAAKb,OAGjD8B,EAAQE,KAAK,KAbF,kDAeP,KAAIsB,SAASzC,KAAK0C,KACpBP,EAAS,KAAIM,SAASzC,KAAK0C,KAhBlB,0DAAH,sDA0BZ,OALAvC,qBAAU,WAERT,aAAaE,QAAQ,UAAW,MAC/B,IAGD,sBAAKwB,UAAU,OAAf,UACE,uCACA,uBAAMA,UAAU,wBAAwBuB,SAAUP,EAAlD,UACE,uBAAOQ,QAAQ,cAAf,mBACA,uBACEC,GAAG,cACHC,KAAK,QACLC,SAAU,SAACV,GAAD,OAAOR,EAASQ,EAAEW,OAAO3C,UAGrC,uBAAOuC,QAAQ,iBAAf,sBACA,uBACEC,GAAG,iBACHC,KAAK,WACLC,SAAU,SAACV,GAAD,OAAON,EAAYM,EAAEW,OAAO3C,UAGxC,uBAAOyC,KAAK,SAASzC,MAAM,aAG5B6B,GACC,cAAC,EAAD,CAAaX,QAASW,EAAOV,WAAY,kBAAMW,OAAS/C,W,yDCjEjD,G,cAAA,IAA0B,qCCa1BgE,EARQ,WACrB,OACE,qBAAKhC,UAAU,mBAAf,SACE,qBAAKiC,IAAKC,EAASlC,UAAU,wBAAwBmC,IAAI,e,iBCkHhDC,G,OAjHG,SAACzC,GAAW,IAaxBlC,EAZI+B,EAAaI,qBAAWV,GAAxBM,SACAtB,EAAa0B,qBAAWlC,GAAxBQ,SAFmB,EAGqBJ,mBAAS,IAH9B,mBAGpBuE,EAHoB,KAGFC,EAHE,OAIexE,qBAJf,mBAIpByE,EAJoB,KAILC,EAJK,OAKD1E,qBALC,mBAKbiD,GALa,WAMrB0B,EAEAC,OAAOC,SAASC,SAGdC,EAAsBlD,EAAtBkD,QAASC,EAAanD,EAAbmD,SAIXC,EAAoB,uCAAG,sBAAA1E,EAAA,sDAC3BiE,EAAoB9C,EAASD,SADF,2CAAH,qDAI1BR,qBAAU,WAIR,GAHAgE,IAEAtF,EAASuF,IAAGP,GACI,SAAZI,EAAoB,CACtB,IAAIjE,EAAOY,EAASD,QACpB9B,EAAOwF,KAAK,aAAc,CAAErE,OAAMkE,WAAUD,eAE7C,CAACrD,IAEJ,IAAM0D,EAAM,uCAAG,WAAOC,EAAW1B,GAAlB,eAAApD,EAAA,kEAEXmE,EAAiBW,IAGbC,EAAiB5D,EAASD,QAAQ8D,MACpC,SAACC,GAAD,OAAUA,EAAKC,YAAc9B,MAEhB+B,OAASV,EACxBM,EAAeK,OAASvF,EAASD,KAAKwD,GAEpB,UAAd0B,EAXO,iCAYH1E,IAAMC,KAAK,sBAAuB0E,GAZ/B,kCAac,SAAdD,EAbA,kCAcH1E,IAAMC,KAAK,sBAAuB0E,GAd/B,0DAiBP,KAAI/B,SAASzC,KAAK0C,KACpBP,EAAS,KAAIM,SAASzC,KAAK0C,KAlBlB,0DAAH,wDAuBRoC,EAAarB,EAMjB,OACE,sBAAKrC,UAAU,QAAf,UAC+B,IAA5BqC,EAAiBsB,OAChB,oBAAI3D,UAAU,qBAAd,4BAEAR,EAASD,QAAQqE,KAAI,SAACN,GACpB,OACE,cAAC,IAAD,CACEtD,UAAU,eAEV6D,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAASb,EAAOa,EAAKT,EAAKC,YACnCS,iBAAkB,kBAjBVvC,EAiB2B6B,EAAKC,UAhBlDG,EAAaA,EAAWO,QAAO,SAACX,GAAD,OAAUA,EAAKC,YAAc9B,UAC5Da,EAAoBoB,GAFH,IAACjC,GAYV,SAOE,qBACEyC,MAAO,CAAEC,gBAAgB,OAAD,OAASb,EAAKc,MAAd,MACxBpE,UAAU,cAFZ,SAIE,sBAAKA,UAAU,sBAAf,UAGE,qBACEA,UAAU,oBACVqE,wBAAyB,CACvBC,OAAO,OAAD,OAAShB,EAAKiB,MAAd,YAGV,qBACEvE,UAAU,uBACVqE,wBAAyB,CACvBC,OAAO,MAAD,OAAQhB,EAAKkB,SAAb,WAGV,sBAAKxE,UAAU,mBAAf,UACGsD,EAAK5B,KAAO,4BAAI4B,EAAK5B,OAAY,KACjC4B,EAAKmB,SAAW,4BAAInB,EAAKmB,WAAgB,KACzCnB,EAAKoB,QAAU,4BAAIpB,EAAKoB,UAAe,cA3BzCpB,EAAKC,cAmCjBhB,EACC,qBAAwBvC,UAAU,yBAAlC,wBACcuC,IADLA,GAIT,oBAAIvC,UAAU,yBAAd,+CbqDO2E,EA5JK,SAAC,GAAkB,IAAhBhC,EAAe,EAAfA,SAAe,EACF/C,qBAAWV,GAArCM,EAD4B,EAC5BA,SAAUC,EADkB,EAClBA,YADkB,EAEJ3B,wBAASE,GAFL,mBAE7B4G,EAF6B,KAEnBC,EAFmB,KAG9BhF,EAAUC,cAHoB,EAINgF,IAAYC,MAAMpC,EAASqC,QAAjDnC,EAJ4B,EAI5BA,QAASC,EAJmB,EAInBA,SACXL,EAEAC,OAAOC,SAASC,SAGlBqC,EAAW,GACf,IAAK,IAAIC,KAAK1F,EAASF,eACrB2F,EAASlF,KAAKP,EAASF,eAAe4F,GAAGzD,IAK3C,IAAI0D,EAAY,GACZ3F,EAASJ,SAAWI,EAASH,SAC/B8F,EAAY,MACH3F,EAASJ,QAClB+F,EAAY,QACH3F,EAASH,WAClB8F,EAAY,UAGd,IAAMC,EAAS,uCAAG,8BAAA/G,EAAA,6DAEhBwG,GAAY,GAGZpF,GAAY,SAAC4F,GAAD,mBAAC,eACRA,GADO,IAEV9F,QAAS,QAGL+F,EAAS,kDAEG,KAElBL,EAASM,SAAQ,SAAC9D,GAChB,IAAI+D,EAAU,CACZC,OAAQ,CACNC,EAAE,2BAAD,OAA6BjE,EAA7B,aAAoC0D,EAApC,gCACDQ,EAAG,KACHC,GAAG,GAAD,OAPU,MAQZC,GAAI,MACJC,GAAI,YACJC,EAAG,IACHC,GAAI,OAENrH,QAAS,CACP,iBAAkBsH,qDAClB,kBAAmB,kCAInBvC,EAAa,GAEjBjF,IACGI,IAAIyG,EAAQE,GACZU,MAAK,SAAC7E,GAIL,IAHA,IAAI8E,EAAO,EAEPC,EAAcC,KAAKC,KAAKjF,EAASzC,KAAK2H,MAAQ,KAC3CJ,GAAQC,GAAa,CAE1B,IAAII,EAAc,2BACbhB,GADa,IAEhBC,OAAO,2BAAMD,EAAQC,QAAf,IAAuBM,EAAE,GAAD,OAAKI,OAErC1H,IACGI,IAAIyG,EAAQkB,GACZN,MAAK,SAAC7E,GAAc,IAAD,gBACDA,EAASzC,KAAK6H,OADb,IAClB,2BAAsC,CAAC,IAA9BC,EAA6B,QACpChD,EAAW3D,KAAK,CACdwD,UAAWmD,EAAKnD,UAChBgB,MAAOmC,EAAKnC,MACZH,MAAOsC,EAAKtC,MACZI,SAAUkC,EAAKlC,SACf9C,KAAMgF,EAAKhF,KACX+C,SAAUiC,EAAKjC,SACfC,QAASgC,EAAKhC,QACdiC,OAAwB,KAAhBD,EAAKC,OAAgB,EAAIC,WAAWF,EAAKC,WAVnC,8BAclBlH,GAAY,SAAC4F,GAAD,mBAAC,eACRA,GADO,IAEV9F,QAAS,YAEJ,IAAIsH,IACL,sBAAIxB,EAAS9F,SAAYmE,GAAYE,KAAI,SAAC8C,GAAD,MAAU,CACjDA,EAAI,UACJA,OAEFI,UACFC,MAAK,SAAC1I,EAAG2I,GACT,OAAO3I,EAAEsI,OAASK,EAAEL,kBAIzBM,OAAM,SAACnG,GACNoG,QAAQpG,MAAMA,MAElBqF,GAAQ,MAGXc,OAAM,SAACnG,GACNoG,QAAQpG,MAAMA,SAIdqG,EAAcC,YAAW,kBAAMvC,GAAY,KAAQ,KAvFzC,mBAwFT,kBAAMwC,aAAaF,MAxFV,2CAAH,qDA2Gf,OAhBApI,qBAAU,WACRtB,EAASuF,IAAGP,GAEI,UAAZI,GACFpF,EAAOwF,KAAK,aAAcH,GAC1BrF,EAAO6J,GAAG,iBAAiB,SAACC,GAC1B9H,GAAY,SAAC4F,GAAD,mBAAC,eACRA,GADO,IAEV9F,QAASgI,WAIbnC,MAED,IAGD,qBAAKpF,UAAU,oBAAf,SACG4E,EACC,cAAC,EAAD,IAEA,qCACE,oBAAI5E,UAAU,mCAAd,sDAGA,cAAC,EAAD,CAAW8C,SAAUA,EAAUD,QAASA,IACxC,sBAAM7C,UAAU,iCAAhB,SACE,uBACE0B,KAAK,SACLzC,MAAM,oBACNgB,QAAS,kBAAMJ,EAAQE,KAAR,4BAAkC+C,ectBhD0E,G,OArIU,SAAC7H,GAAW,IAAD,EACQ7B,mBAAS,IADjB,mBAC3B2J,EAD2B,KACZC,EADY,OAEoB5J,wBAASE,GAF7B,mBAE3B2J,EAF2B,KAENC,EAFM,OAGc9J,mBAAS,GAHvB,mBAG3B+J,EAH2B,KAGTC,EAHS,KAK5BC,EAAa,uCAAG,0CAAA1J,EAAA,6DAChBmF,EAASlF,aAAaC,QAAQ,WADd,SAEFE,IAAMI,IAAN,8BAAiC2E,IAF/B,OAqBpB,IAASwE,KAnBHT,EAFc,OAIdU,EAAmBV,EAAI3I,KAGvBsJ,EAAmBD,EAAiBhE,QACxC,SAACkE,EAAGjD,EAAG7G,GAAP,OAAaA,EAAE+J,WAAU,SAACzC,GAAD,OAAOA,EAAEpC,YAAc4E,EAAE5E,eAAe2B,KAI/DmD,EAAoB,GACxBJ,EAAiB1C,SAAQ,SAACjC,GACxB+E,EAAkB/E,EAAKC,WAAa8E,EAAkB/E,EAAKC,WACvD8E,EAAkB/E,EAAKC,WAAa,EACpC,KAIF+E,EAAuB,GACXD,EACdC,EAAqBvI,KAAK,CAAE0B,GAAIuG,EAAKO,MAAOF,EAAkBL,KAEhEM,EAAqBvB,MAAK,SAAC1I,EAAG2I,GAC5B,OAAOA,EAAEuB,MAAQlK,EAAEkK,SAErBD,EAAuBA,EAAqB1E,KAAI,SAACvF,GAC/C,OAAOA,EAAEoD,MAIP+G,EAAqB,GACzBF,EAAqB/C,SAAQ,SAAC9D,GAC5B,IAAIgH,EAAMP,EAAiB7E,MAAK,SAACqF,GAAD,OAAOA,EAAEnF,YAAc9B,KACvD+G,EAAmBzI,KAAK0I,MAG1Bb,EAAuBY,EAAmB7E,QAE1C+D,EAAiBc,GAxCG,4CAAH,qDAgFnBzJ,qBAAU,WACRgJ,MACC,IAYH,OACE,qBAAK/H,UAAU,0BAAf,SACG6H,EAAmBF,EAClB,gCACE,oBAAI3H,UAAU,6BAAd,+EAvDkB,WACxB,IAAM2I,EAAkBlB,EAAcI,GAEtC,OACE,qBAAK7H,UAAU,kCAAf,SACE,qBACEkE,MAAO,CAAEC,gBAAgB,OAAD,cAASwE,QAAT,IAASA,OAAT,EAASA,EAAiBvE,MAA1B,MACxBpE,UAAU,2BAFZ,SAIE,sBAAKA,UAAU,mCAAf,UACE,qBACEA,UAAU,iCACVqE,wBAAyB,CACvBC,OAAO,OAAD,cAASqE,QAAT,IAASA,OAAT,EAASA,EAAiBpE,MAA1B,YAGV,qBACEvE,UAAU,oCACVqE,wBAAyB,CACvBC,OAAO,MAAD,cAAQqE,QAAR,IAAQA,OAAR,EAAQA,EAAiBnE,SAAzB,WAGV,sBAAKxE,UAAU,gCAAf,WACkB,OAAf2I,QAAe,IAAfA,OAAA,EAAAA,EAAiBjH,MAAO,mCAAIiH,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBjH,OAAY,MAC1C,OAAfiH,QAAe,IAAfA,OAAA,EAAAA,EAAiBlE,UAChB,mCAAIkE,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBlE,WACnB,MACY,OAAfkE,QAAe,IAAfA,OAAA,EAAAA,EAAiBjE,SAChB,mCAAIiE,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBjE,UACnB,eA6BPkE,GACD,sBAAM5I,UAAU,uCAAhB,SACE,uBACE0B,KAAK,SACLzC,MAAM,sBACNgB,QAAS,SAACgB,GAAD,OAtBM,SAACA,GAC1BA,EAAEC,iBACF4G,EAAoBD,EAAmB,GAoBbgB,CAAmB5H,WAKzC,sBAAKjB,UAAU,+BAAf,UACE,oBAAIA,UAAU,kCAAd,oCAGA,sBAAMA,UAAU,wCAAhB,SACE,uBACE0B,KAAK,SACLzC,MAAM,qBACNgB,QAAS,SAACgB,GAAD,OA9BQ,SAACA,GAC5BA,EAAEC,iBACF4G,EAAoB,GA4BMgB,CAAqB7H,ebtEpC8H,G,OAjDS,SAACpJ,GAAW,IAC1BzB,EAAa0B,qBAAWlC,GAAxBQ,SADyB,EAEDJ,mBAAS,IAFR,mBAE1BgF,EAF0B,KAEhBkG,EAFgB,OAGPlL,mBAAS,IAHF,mBAG1BmL,EAH0B,KAGnBC,EAHmB,KAI3BrJ,EAAUC,cACV2C,EAEAC,OAAOC,SAASC,SAGtB7D,qBAAU,WACRtB,EAASuF,IAAGP,KACX,CAACA,IAEJ,IAAMzB,EAAM,uCAAG,WAAOC,GAAP,SAAA5C,EAAA,sDACb4C,EAAEC,iBAEE4B,IACFrF,EAAOwF,KAAK,WAAYH,EAAU,CAAE7E,KAAMC,EAASD,OAAQ,kBACzD+K,EAAY,OAGdvL,EAAO6J,GAAG,gBAAgB,SAAC6B,EAAWC,GACpCF,EAASC,GACS,eAAdA,GACFtJ,EAAQE,KAAR,2CAAiDqJ,QAX1C,2CAAH,sDAgBZ,OACE,sBAAKpJ,UAAU,OAAf,UACE,uBAAMA,UAAU,+BAA+BuB,SAAUP,EAAzD,UACE,uBAAOQ,QAAQ,YAAf,uBACA,uBACEC,GAAG,YACHC,KAAK,OACLzC,MAAO6D,EACPnB,SAAU,SAACV,GAAD,OAAO+H,EAAY/H,EAAEW,OAAO3C,UAExC,uBAAOyC,KAAK,SAASzC,MAAM,aAE5BgK,GACC,cAAC,EAAD,CAAa9I,QAAS8I,EAAO7I,WAAY,kBAAM8I,OAASlL,WcHjDqL,G,qBA7CI,SAAC1J,GAAW,IAAD,EACMC,qBAAWV,GAArCM,EADoB,EACpBA,SAAUC,EADU,EACVA,YAelB,OACE,sBAAKO,UAAU,cAAf,UACE,4CACA,sBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,uBAAOwB,QAAQ,QAAf,mBACA,uBACEE,KAAK,WACLD,GAAG,QACHnB,KAAK,QACLgJ,QAAS9J,EAASJ,QAClBuC,SAAU,SAACV,GAAD,OAxBG,SAACA,GACtBxB,GAAY,SAAC4F,GAAD,mBAAC,eACRA,GADO,IAEVjG,QAAS6B,EAAEW,OAAO0H,aAqBKC,CAAetI,SAGpC,sBAAKjB,UAAU,wBAAf,UACE,uBAAOwB,QAAQ,SAAf,mBACA,uBACEE,KAAK,WACLD,GAAG,SACHnB,KAAK,SACLgJ,QAAS9J,EAASH,SAClBsC,SAAU,SAACV,GAAD,OA5BI,SAACA,GACvBxB,GAAY,SAAC4F,GAAD,mBAAC,eACRA,GADO,IAEVhG,SAAU4B,EAAEW,OAAO0H,aAyBIE,CAAgBvI,iBChB9BwI,G,qBAtBG,SAAC9J,GAAW,IAAD,EACK7B,oBAAS,GADd,mBACpB4L,EADoB,KACVC,EADU,KAS3B,OACE,qBAAK3J,UAAU,aAAf,SACE,wBAEE0B,KAAK,SACLzB,QAAS,kBAXM2J,EAWYjK,EAAMiK,MAVrCjK,EAAMkK,qBAAqBD,GAC3BjK,EAAMmK,WAAW,SACjBH,GAAaD,GAHK,IAACE,GAQjB,SAKGjK,EAAMiK,MAAMtJ,MAJRX,EAAMiK,MAAMnI,QCSVsI,EApBG,SAACpK,GACjB,OAAIA,EAAMqK,SAAWrK,EAAMqK,QAAQrG,OAAS,EAExC,qBAAK3D,UAAU,aAAf,SACGL,EAAMsK,UAAUrG,KAAI,SAACgG,GACpB,OACE,cAAC,EAAD,CACEA,MAAOA,EACPC,qBAAsBlK,EAAMkK,qBAC5BC,WAAYnK,EAAMmK,kBAOrB,M,yBCMII,G,OApBW,SAACvK,GAAW,IAAD,EACDC,qBAAWV,GAArCM,EAD2B,EAC3BA,SAAUC,EADiB,EACjBA,YASlB,OACE,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAcC,QAAS,kBATtB,SAAC2J,GACnB,IAAMO,EAAW3K,EAASF,eAAe2E,QAAO,SAACyC,GAC/C,OAAOA,EAAKjF,KAAOmI,EAAMnI,MAE3BhC,GAAY,SAAC4F,GAAD,mBAAC,eAAmBA,GAApB,IAA8B/F,eAAgB6K,OAKZC,CAAYzK,EAAMiK,QAA9D,SACE,cAAC,IAAD,CAAiBS,KAAMC,QAExB3K,EAAMiK,MAAMtJ,UCGJiK,EAnBY,SAAC5K,GAAW,IAC7BH,EAAaI,qBAAWV,GAAxBM,SAER,OACE,sBAAKQ,UAAU,uBAAf,UACE,4BACE,2CAEkC,IAAnCR,EAASF,eAAeqE,OACvB,mDAEAnE,EAASF,eAAesE,KAAI,SAACgG,GAC3B,OAAO,cAAC,EAAD,CAAmBA,MAAOA,WCwC5BY,EAnDK,SAAC7K,GAAW,IAAD,EACKC,qBAAWV,GAArCM,EADqB,EACrBA,SAAUC,EADW,EACXA,YAyBlB,OACE,sBAAKO,UAAU,eAAf,UACE,wCACA,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,uBACEA,UAAU,6BACV0B,KAAK,SACLzC,MAAOU,EAAMqK,QACbnI,YAAY,eACZF,SAAU,SAACV,GAAD,OAjCI,SAAC+I,GACvBrK,EAAMmK,WAAWE,GACjB,IAAMG,EAAWxK,EAAM8K,iBACpBxG,QAAO,SAAC2F,GACP,OAAOA,EAAMtJ,KAAKoK,cAAcC,SAASX,EAAQU,kBAElDE,MAAM,EAAG,GACZjL,EAAMkL,aAAaV,GA0BMW,CAAgB7J,EAAEW,OAAO3C,UAE5C,cAAC,EAAD,CACE+K,QAASrK,EAAMqK,QACfF,WAAYnK,EAAMmK,WAClBG,UAAWtK,EAAMsK,UACjBJ,qBA7BmB,SAACD,GAEzBpK,EAASF,eAAeyL,MACvB,SAACC,GAAD,OAAmBA,EAAcvJ,KAAOmI,EAAMnI,OAGhDhC,GAAY,SAAC4F,GAAD,mBAAC,eACRA,GADO,IAEV/F,eAAe,GAAD,mBAAM+F,EAAS/F,gBAAf,CAA+BsK,eAwB7C,cAAC,EAAD,WlBsCOqB,EA9EM,SAACtL,GAAW,IACvBF,EAAgBG,qBAAWV,GAA3BO,YADsB,EAEkB3B,mBAAS,IAF3B,mBAEvB2M,EAFuB,KAELS,EAFK,OAGIpN,mBAAS,IAHb,mBAGvBmM,EAHuB,KAGZY,EAHY,OAIA/M,mBAAS,IAJT,mBAIvBkM,EAJuB,KAIdF,EAJc,KAKxBjK,EAAUC,cACV2C,EAEAC,OAAOC,SAASC,SAGhBuI,EAAW,uCAAG,8BAAA9M,EAAA,sDACZmH,EAAU,CACd4F,OAAQ,MACRC,IAAK,gDACL5F,OAAQ,CAAEE,EAAG,UACbhH,QAAS,CACP,iBAAkBsH,qDAClB,kBAAmB,kCAInBqF,EAAY,GAEhB7M,IACG8M,QAAQ/F,GACRU,MAAK,SAAC7E,GAAc,IAAD,gBACDA,EAASzC,KAAK6H,OADb,IAClB,2BAAsC,CAAC,IAA9BC,EAA6B,QAE/B8E,OAAOC,KAAK/E,GAAM,GAAGiE,SAAS,QACjCW,EAAUvL,KAAK,CACb0B,GAAI+J,OAAO1E,OAAOJ,GAAM,GAAG,GAC3BpG,KAAMkL,OAAOC,KAAK/E,GAAM,MANZ,8BAUlBwE,EAAoBI,MAErBrE,OAAM,SAACnG,GACNoG,QAAQpG,MAAMA,MA5BA,2CAAH,qDAgCjB/B,qBAAU,WACRtB,EAASuF,IAAGP,GAGZhD,EAAY,CAAEL,SAAS,EAAOC,UAAU,EAAOC,eAAgB,KAE/D6L,MACC,IAEH,IAAMO,EAAI,uCAAG,WAAOzK,GAAP,SAAA5C,EAAA,sDACX4C,EAAEC,iBACFzD,EAAOwF,KAAK,WAAYtD,EAAMgM,MAC9B9L,EAAQE,KAAR,0CAAgDJ,EAAMgM,OAH3C,2CAAH,sDAMV,OACE,sBAAK3L,UAAU,gBAAf,UACE,6DACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEyK,iBAAkBA,EAClBS,oBAAqBA,EACrBjB,UAAWA,EACXY,aAAcA,EACdb,QAASA,EACTF,WAAYA,IAEd,qBAAK9J,UAAU,8BAAf,SACE,sBAAMA,UAAU,OAAOuB,SAAUmK,EAAjC,SACE,uBAAOhK,KAAK,SAASzC,MAAM,kBCWtB2M,EApFK,SAAC,GAAkB,IAUjCD,EAViBhJ,EAAe,EAAfA,SACbzE,EAAa0B,qBAAWlC,GAAxBQ,SAD4B,EAEVJ,oBAAS,GAFC,mBAE7B+N,EAF6B,KAEtBC,EAFsB,OAGNhH,IAAYC,MAAMpC,EAASqC,QAAjDnC,EAH4B,EAG5BA,QAASC,EAHmB,EAGnBA,SACXjD,EAAUC,cACV2C,EAEAC,OAAOC,SAASC,SAmCtB,OApBE+I,EAJc,SAAZ9I,GACF8I,EACEtF,KAAK0F,SAASC,SAAS,IAAIC,UAAU,EAAG,IACxC5F,KAAK0F,SAASC,SAAS,IAAIC,UAAU,EAAG,KAC9BrB,MAAM,EAAG,GAEd9H,EAGT/D,qBAAU,WACRT,aAAaE,QAAQ,UAAWmN,IAEhClO,EAASuF,IAAGP,IACLQ,KAAK,gBAAiB0I,EAAM9I,EAAS,CAAE5E,KAAMC,EAASD,OAC7DR,EAAO6J,GAAG,aAAa,SAAC4E,GApBN,IAACC,IAqBLD,EApBdE,SAASC,eAAe,SAASC,UAAjC,kBACIH,EAAUvI,KAAI,SAAC3F,GAAD,oBAAiBA,EAAKqC,KAAtB,YAAmCoL,KAAK,IAD1D,WAsBAjO,EAAO6J,GAAG,cAAc,SAACuE,GACP,UAAZhJ,GACFiJ,GAAS,QAGZ,CAACrJ,IAGF,sBAAKzC,UAAU,oBAAf,UACE,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,2CACA,8BACE,sCADF,IAC4B,SAAZ6C,EAAqB,QAAU,UAE/C,8BACE,2CADF,IACqB8I,KAErB,4BACE,gDAEF,oBAAIlK,GAAG,eAGE,SAAZoB,EACC,cAAC,EAAD,CAAc8I,KAAMA,EAAM9I,QAASA,IAEnC,qBAAK7C,UAAU,8BAAf,SACE,yHAMH6L,GACC,sBAAM7L,UAAU,kCAAhB,SACE,uBACE0B,KAAK,SACLzC,MAAM,QACNgB,QAAS,kBACPJ,EAAQE,KAAR,4BAAkC4L,EAAlC,qBAAmD9I,aCpClD0J,I,OAxCK,SAAC,GAAkB,IAAhB5J,EAAe,EAAfA,SACf9C,EAAUC,cACRgD,EAAagC,IAAYC,MAAMpC,EAASqC,QAAxClC,SACA5E,EAAa0B,qBAAWlC,GAAxBQ,SAH4B,EAIVJ,oBAAS,GAJC,mBAI7B+N,EAJ6B,KAItBC,EAJsB,KAK9BrJ,EAEAC,OAAOC,SAASC,SAWtB,OARA7D,qBAAU,YACRtB,EAASuF,IAAGP,IACLQ,KAAK,UAAWH,EAAU,CAAE7E,KAAMC,EAASD,OAClDR,EAAO6J,GAAG,QAAQ,WAChBwE,GAAS,QAEV,CAACrJ,IAGF,sBAAKzC,UAAU,oBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,6DACA,wFAED6L,GACC,sBAAK7L,UAAU,iCAAf,UACE,mFACA,sBAAMA,UAAU,iCAAhB,SACE,uBACE0B,KAAK,SACLzC,MAAM,OACNgB,QAAS,kBAAMJ,EAAQE,KAAR,uBiBDdyM,GA5BA,WACb,IAAMC,EAAS,CACb,CAAEnM,KAAM,OAAQoM,KAAM,IAAKC,UAAWjN,GACtC,CAAEY,KAAM,WAAYoM,KAAM,YAAaC,UAAWtM,GAClD,CAAEC,KAAM,QAASoM,KAAM,SAAUC,UAAW7K,GAC5C,CAAExB,KAAM,UAAWoM,KAAM,WAAYC,UAAWhI,GAChD,CAAErE,KAAM,eAAgBoM,KAAM,SAAUC,UAAWnF,GACnD,CAAElH,KAAM,cAAeoM,KAAM,QAASC,UAAW5D,GACjD,CAAEzI,KAAM,UAAWoM,KAAM,WAAYC,UAAWf,GAChD,CAAEtL,KAAM,UAAWoM,KAAM,WAAYC,UAAWJ,KAgBlD,OAAO,cAAC,IAAD,UAZEE,EAAO7I,KAAI,SAACgJ,GACjB,OACE,cAAC,IAAD,CAEEC,OAAK,EACLH,KAAME,EAAMF,KACZI,UAAWF,EAAMD,WAHZC,EAAMtM,YCUNyM,I,cAhCK,SAACpN,GAAW,IAAD,EACKC,qBAAWlC,GAArCQ,EADqB,EACrBA,SAAUC,EADW,EACXA,YAEZ0B,EAAUC,cAehB,OACE,qBAAKE,UAAU,eAAf,SACG9B,EAASD,KACR,wBAAQgC,QAVC,WACb9B,EAAY,CAAEJ,WAAOC,EAAWC,UAAMD,IACtCM,aAAaE,QAAQ,aAAc,IAEnCqB,EAAQE,KAAK,MAMT,oBAEA,qCACE,wBAAQE,QAnBC,WACfJ,EAAQE,KAAK,cAkBP,sBACA,wBAAQE,QAjBF,WACZJ,EAAQE,KAAK,WAgBP,0BCdKiN,GAXA,SAACrN,GACd,OACE,yBAAQK,UAAU,SAAlB,UACE,cAAC,IAAD,CAAMiN,GAAG,IAAT,SACE,oBAAIjN,UAAU,gBAAd,uBAEF,cAAC,GAAD,QCcSkN,GAjBH,WACV,OACE,mCACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,qBAAKlN,UAAU,YAAf,SACE,cAAC,GAAD,gBCLCmN,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnH,MAAK,YAAkD,IAA/CoH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFzB,SAASC,eAAe,SAM1Bc,M","file":"static/js/main.74d5cb82.chunk.js","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport \"./ResultsPage.css\";\r\nimport { ShowContext } from \"../../context/ShowContext\";\r\nimport FullPageLoader from \"../../components/FullPageLoader/FullPageLoader\";\r\nimport ShowCards from \"../../components/ShowCards/ShowCards\";\r\n\r\nlet socket;\r\n\r\nconst ResultsPage = ({ location }) => {\r\n  const { showData, setShowData } = useContext(ShowContext);\r\n  const [isLoader, setIsLoader] = useState(undefined);\r\n  const history = useHistory();\r\n  const { creator, roomCode } = queryString.parse(location.search);\r\n  const ENDPOINT =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"https://localhost:5000\";\r\n\r\n  let genreIds = [];\r\n  for (let i in showData.selectedGenres) {\r\n    genreIds.push(showData.selectedGenres[i].id);\r\n  }\r\n\r\n  // MAKE SURE THAT THEY HAVE TO CLICK A BUTTON IN ORDER FOR IT TO WORK\r\n\r\n  let mediaType = \"\";\r\n  if (showData.isMovie && showData.isSeries) {\r\n    mediaType = \"Any\";\r\n  } else if (showData.isMovie) {\r\n    mediaType = \"Movie\";\r\n  } else if (showData.isSeries) {\r\n    mediaType = \"Series\";\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    // Show the page loader\r\n    setIsLoader(true);\r\n\r\n    // Removes any results that may be leftover from previous page renders\r\n    setShowData((prevData) => ({\r\n      ...prevData,\r\n      results: [],\r\n    }));\r\n\r\n    const apiUrl = \"https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi\";\r\n    // Country ID for Canada\r\n    const countryId = \"33\";\r\n\r\n    genreIds.forEach((id) => {\r\n      let options = {\r\n        params: {\r\n          q: `-!1900,2020-!0,5-!0,10-!${id}-!${mediaType}-!Any-!Any-!-!{downloadable}`,\r\n          t: \"ns\",\r\n          cl: `${countryId}`,\r\n          st: \"adv\",\r\n          ob: \"Relevance\",\r\n          p: \"1\",\r\n          sa: \"and\",\r\n        },\r\n        headers: {\r\n          \"x-rapidapi-key\": process.env.REACT_APP_UNOGS_KEY,\r\n          \"x-rapidapi-host\": \"unogs-unogs-v1.p.rapidapi.com\",\r\n        },\r\n      };\r\n\r\n      let resultsArr = [];\r\n\r\n      axios\r\n        .get(apiUrl, options)\r\n        .then((response) => {\r\n          let page = 1;\r\n          // Number of total pages for the API call, since API results come in pages of 100 results each\r\n          let numberPages = Math.ceil(response.data.COUNT / 100);\r\n          while (page <= numberPages) {\r\n            // The page number is incremented until all results are extracted\r\n            let resultsOptions = {\r\n              ...options,\r\n              params: { ...options.params, p: `${page}` },\r\n            };\r\n            axios\r\n              .get(apiUrl, resultsOptions)\r\n              .then((response) => {\r\n                for (let item of response.data.ITEMS) {\r\n                  resultsArr.push({\r\n                    netflixid: item.netflixid,\r\n                    title: item.title,\r\n                    image: item.image,\r\n                    synopsis: item.synopsis,\r\n                    type: item.type,\r\n                    released: item.released,\r\n                    runtime: item.runtime,\r\n                    rating: item.rating === \"\" ? 0 : parseFloat(item.rating), // Set to 0 if empty string, else convert rating from string to float\r\n                  });\r\n                }\r\n\r\n                setShowData((prevData) => ({\r\n                  ...prevData,\r\n                  results: [\r\n                    // Removes any duplicate items in the results state variable\r\n                    ...new Map(\r\n                      [...prevData.results, ...resultsArr].map((item) => [\r\n                        item[\"netflixid\"],\r\n                        item,\r\n                      ])\r\n                    ).values(),\r\n                  ].sort((a, b) => {\r\n                    return a.rating - b.rating;\r\n                  }),\r\n                }));\r\n              })\r\n              .catch((error) => {\r\n                console.error(error);\r\n              });\r\n            page += 1;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    });\r\n    // Remove the page loader after 3 seconds\r\n    const loaderTimer = setTimeout(() => setIsLoader(false), 3000);\r\n    return () => clearTimeout(loaderTimer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n\r\n    if (creator === \"false\") {\r\n      socket.emit(\"getResults\", roomCode);\r\n      socket.on(\"returnResults\", (res) => {\r\n        setShowData((prevData) => ({\r\n          ...prevData,\r\n          results: res,\r\n        }));\r\n      });\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page results-page\">\r\n      {isLoader ? (\r\n        <FullPageLoader />\r\n      ) : (\r\n        <>\r\n          <h3 className=\"results-page__swipe-instructions\">\r\n            Swipe right to accept and left to reject\r\n          </h3>\r\n          <ShowCards roomCode={roomCode} creator={creator} />\r\n          <form className=\"results-page__done-button form\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"I'm done swiping!\"\r\n              onClick={() => history.push(`/waiting?roomCode=${roomCode}`)}\r\n            />\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./JoinSessionPage.css\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport ErrorNotice from \"../../components/ErrorNotice/ErrorNotice\";\r\n\r\nlet socket;\r\n\r\nconst JoinSessionPage = (props) => {\r\n  const { userData } = useContext(UserContext);\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [found, setFound] = useState(\"\");\r\n  const history = useHistory();\r\n  const ENDPOINT =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"https://localhost:5000\";\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n  }, [ENDPOINT]);\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (roomCode) {\r\n      socket.emit(\"userJoin\", roomCode, { user: userData.user }, () =>\r\n        setRoomCode(\"\")\r\n      );\r\n\r\n      socket.on(\"roomNotFound\", (roomFound, roomID) => {\r\n        setFound(roomFound);\r\n        if (roomFound === \"Room Found\") {\r\n          history.push(`/session?creator=false&&roomCode=${roomID}`);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"page\">\r\n      <form className=\"join-session-page__form form\" onSubmit={submit}>\r\n        <label htmlFor=\"room-code\">Room Code</label>\r\n        <input\r\n          id=\"room-code\"\r\n          type=\"text\"\r\n          value={roomCode}\r\n          onChange={(e) => setRoomCode(e.target.value)}\r\n        />\r\n        <input type=\"submit\" value=\"Enter\" />\r\n      </form>\r\n      {found && (\r\n        <ErrorNotice message={found} clearError={() => setFound(undefined)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinSessionPage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./OptionSelect.css\";\r\nimport { ShowContext } from \"../../context/ShowContext\";\r\nimport TypeSelect from \"../TypeSelect/TypeSelect\";\r\nimport GenreSelect from \"../GenreSelect/GenreSelect\";\r\n\r\nlet socket;\r\n\r\nconst OptionSelect = (props) => {\r\n  const { setShowData } = useContext(ShowContext);\r\n  const [genreListDefault, setGenreListDefault] = useState([]);\r\n  const [genreList, setGenreList] = useState([]);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const history = useHistory();\r\n  const ENDPOINT =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"https://localhost:5000\";\r\n\r\n  const fetchGenres = async () => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://unogs-unogs-v1.p.rapidapi.com/api.cgi\",\r\n      params: { t: \"genres\" },\r\n      headers: {\r\n        \"x-rapidapi-key\": process.env.REACT_APP_UNOGS_KEY,\r\n        \"x-rapidapi-host\": \"unogs-unogs-v1.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    let genresArr = [];\r\n\r\n    axios\r\n      .request(options)\r\n      .then((response) => {\r\n        for (let item of response.data.ITEMS) {\r\n          // Only include specific genres, not parent genres (parent genres contain the keyword \"All\")\r\n          if (!Object.keys(item)[0].includes(\"All\")) {\r\n            genresArr.push({\r\n              id: Object.values(item)[0][0],\r\n              name: Object.keys(item)[0],\r\n            });\r\n          }\r\n        }\r\n        setGenreListDefault(genresArr);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n\r\n    // Clear movie/show checkboxes and selected genres list\r\n    setShowData({ isMovie: false, isSeries: false, selectedGenres: [] });\r\n\r\n    fetchGenres();\r\n  }, []);\r\n\r\n  const join = async (e) => {\r\n    e.preventDefault();\r\n    socket.emit(\"readyNow\", props.room);\r\n    history.push(`/results?creator=true&&roomCode=${props.room}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"option-select\">\r\n      <h1>Choose your group's filters</h1>\r\n      <TypeSelect />\r\n      <GenreSelect\r\n        genreListDefault={genreListDefault}\r\n        setGenreListDefault={setGenreListDefault}\r\n        genreList={genreList}\r\n        setGenreList={setGenreList}\r\n        keyword={keyword}\r\n        setKeyword={setKeyword}\r\n      />\r\n      <div className=\"option-select__start-button\">\r\n        <form className=\"form\" onSubmit={join}>\r\n          <input type=\"submit\" value=\"Start\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default OptionSelect;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./SessionPage.css\";\r\nimport OptionSelect from \"../../components/OptionSelect/OptionSelect\";\r\n\r\nlet socket;\r\n\r\nconst SessionPage = ({ location }) => {\r\n  const { userData } = useContext(UserContext);\r\n  const [ready, setReady] = useState(false);\r\n  const { creator, roomCode } = queryString.parse(location.search);\r\n  const history = useHistory();\r\n  const ENDPOINT =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"https://localhost:5000\";\r\n\r\n  let room;\r\n\r\n  const outputUsers = (roomUsers) => {\r\n    document.getElementById(\"users\").innerHTML = `\r\n      ${roomUsers.map((user) => `<li>${user.name}</li>`).join(\"\")}\r\n  `;\r\n  };\r\n\r\n  if (creator === \"true\") {\r\n    room =\r\n      Math.random().toString(36).substring(2, 15) +\r\n      Math.random().toString(36).substring(2, 15);\r\n    room = room.slice(0, 6);\r\n  } else {\r\n    room = roomCode;\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"room-id\", room);\r\n\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"sessioncreate\", room, creator, { user: userData.user });\r\n    socket.on(\"roomUsers\", (users) => {\r\n      outputUsers(users);\r\n    });\r\n    socket.on(\"usersReady\", (ready) => {\r\n      if (creator === \"false\") {\r\n        setReady(true);\r\n      }\r\n    });\r\n  }, [ENDPOINT]);\r\n\r\n  return (\r\n    <div className=\"session-page page\">\r\n      <div className=\"session-page__room-info-container\">\r\n        <div className=\"session-page__room-info\">\r\n          <h2>Room Info</h2>\r\n          <p>\r\n            <b>Role:</b> {creator === \"true\" ? \"Admin\" : \"User\"}\r\n          </p>\r\n          <p>\r\n            <b>Room Code:</b> {room}\r\n          </p>\r\n          <p>\r\n            <b>Room Members:</b>\r\n          </p>\r\n          <ul id=\"users\"></ul>\r\n        </div>\r\n      </div>\r\n      {creator === \"true\" ? (\r\n        <OptionSelect room={room} creator={creator} />\r\n      ) : (\r\n        <div className=\"session-page__start-message\">\r\n          <p>\r\n            The Start button will appear once the admin is finished selecting\r\n            your group's filters\r\n          </p>\r\n        </div>\r\n      )}\r\n      {ready && (\r\n        <form className=\"session-page__start-button form\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Start\"\r\n            onClick={() =>\r\n              history.push(`/results?roomCode=${room}&&creator=${creator}`)\r\n            }\r\n          />\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionPage;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport queryString from \"query-string\";\r\n\r\nimport \"./WaitingPage.css\";\r\n\r\nlet socket;\r\n\r\nconst WaitingPage = ({ location }) => {\r\n  const history = useHistory();\r\n  const { roomCode } = queryString.parse(location.search);\r\n  const { userData } = useContext(UserContext);\r\n  const [ready, setReady] = useState(false);\r\n  const ENDPOINT =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"https://localhost:5000\";\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"waiting\", roomCode, { user: userData.user });\r\n    socket.on(\"done\", () => {\r\n      setReady(true);\r\n    });\r\n  }, [ENDPOINT]);\r\n\r\n  return (\r\n    <div className=\"waiting-page page\">\r\n      <div className=\"waiting-page__message\">\r\n        <h1>Welcome to the waiting room</h1>\r\n        <h2>Please wait for everyone to finish their selections</h2>\r\n      </div>\r\n      {ready && (\r\n        <div className=\"waiting-page__button-container\">\r\n          <h3>You may now continue to the final recommendations</h3>\r\n          <form className=\"waiting-page__next-button form\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Next\"\r\n              onClick={() => history.push(`/final`)}\r\n            />\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaitingPage;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UserContext = createContext({});\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined,\r\n  });\r\n\r\n  const checkLoggedIn = async () => {\r\n    let token = localStorage.getItem(\"auth-token\");\r\n\r\n    // Checking if the auth-token key does not exist in local storage\r\n    if (token === null) {\r\n      localStorage.setItem(\"auth-token\", \"\");\r\n      token = \"\";\r\n    }\r\n\r\n    // Check if the token is valid\r\n    const tokenRes = await axios.post(\"/api/users/isTokenValid\", null, {\r\n      headers: { \"x-auth-token\": token },\r\n    });\r\n    // If the token exists, retreive the user's data\r\n    if (tokenRes.data) {\r\n      const userRes = await axios.get(\"/api/users/loggedInUser\", {\r\n        headers: { \"x-auth-token\": token },\r\n      });\r\n      setUserData({ token, user: userRes.data });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkLoggedIn();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userData, setUserData }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserContext, UserProvider };\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nconst ShowContext = createContext([{}, () => {}]);\r\n\r\nconst ShowProvider = ({ children }) => {\r\n  const [showData, setShowData] = useState({\r\n    isMovie: false,\r\n    isSeries: false,\r\n    selectedGenres: [],\r\n    results: [],\r\n  });\r\n\r\n  return (\r\n    <ShowContext.Provider value={{ showData, setShowData }}>\r\n      {children}\r\n    </ShowContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ShowContext, ShowProvider };\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./HomePage.css\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nconst HomePage = (props) => {\r\n  const { userData } = useContext(UserContext);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    // If a user is not logged in, redirect them to the Login Page\r\n    if (!userData.user) {\r\n      history.push(\"/login\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"page home-page\">\r\n      <div className=\"home-page__container\">\r\n        <h1 className=\"home-page__title\">Welcome to flicker!</h1>\r\n        <h3 className=\"home-page__description\">\r\n          Start your own session, or join someone else's session\r\n        </h3>\r\n        <div className=\"home-page__button-row\">\r\n          <button onClick={() => history.push(\"/session?creator=true\")}>\r\n            Start Session\r\n          </button>\r\n          <button onClick={() => history.push(\"/join\")}>Join Session</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nimport \"./ErrorNotice.css\";\r\n\r\nconst ErrorNotice = (props) => {\r\n  return (\r\n    <div className=\"error-notice\">\r\n      <span>{props.message}</span>\r\n      <button onClick={props.clearError}>X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorNotice;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./RegisterPage.css\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport ErrorNotice from \"../../components/ErrorNotice/ErrorNotice\";\r\n\r\nconst RegisterPage = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { setUserData } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const newUser = { name, email, password, passwordCheck };\r\n      // Send the new user data to the /register API endpoint\r\n      await axios.post(\"/api/users/register\", newUser);\r\n      const loginRes = await axios.post(\"/api/users/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      // Update the UserContext state\r\n      setUserData({ token: loginRes.data.token, user: loginRes.data.user });\r\n      // Set the auth-token in the browser\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      // Reset the room ID\r\n      localStorage.setItem(\"room-id\", \"\");\r\n\r\n      // Redirect user to the Home page\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      if (err.response.data.msg) {\r\n        setError(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Reset the room ID\r\n    localStorage.setItem(\"room-id\", \"\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Register</h2>\r\n      <form className=\"register-page__form form\" onSubmit={submit}>\r\n        <label htmlFor=\"register-name\">Full name</label>\r\n        <input\r\n          id=\"register-name\"\r\n          type=\"text\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"register-email\">Email</label>\r\n        <input\r\n          id=\"register-email\"\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"register-password\">Password</label>\r\n        <input\r\n          id=\"register-password\"\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Verify password\"\r\n          onChange={(e) => setPasswordCheck(e.target.value)}\r\n        />\r\n\r\n        <input type=\"submit\" value=\"Register\" />\r\n      </form>\r\n\r\n      {error && (\r\n        <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./LoginPage.css\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport ErrorNotice from \"../../components/ErrorNotice/ErrorNotice\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(undefined);\r\n  const [password, setPassword] = useState(undefined);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  const { setUserData } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const loginUser = { email, password };\r\n      const loginRes = await axios.post(\"/api/users/login\", loginUser);\r\n      // Update the UserContext state\r\n      setUserData({ token: loginRes.data.token, user: loginRes.data.user });\r\n\r\n      // Set the auth-token in the browser\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n\r\n      // Redirect user to the Home page\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      if (err.response.data.msg) {\r\n        setError(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Reset the room ID\r\n    localStorage.setItem(\"room-id\", \"\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Login</h2>\r\n      <form className=\"login-page__form form\" onSubmit={submit}>\r\n        <label htmlFor=\"login-email\">Email</label>\r\n        <input\r\n          id=\"login-email\"\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"login-password\">Password</label>\r\n        <input\r\n          id=\"login-password\"\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <input type=\"submit\" value=\"Login\" />\r\n      </form>\r\n\r\n      {error && (\r\n        <ErrorNotice message={error} clearError={() => setError(undefined)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","export default __webpack_public_path__ + \"static/media/spinner.57e508b9.gif\";","import React from \"react\";\r\n\r\nimport \"./FullPageLoader.css\";\r\nimport spinner from \"../../assets/images/spinner.gif\";\r\n\r\nconst FullPageLoader = () => {\r\n  return (\r\n    <div className=\"full-page-loader\">\r\n      <img src={spinner} className=\"full-page-loader__img\" alt=\"loading\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPageLoader;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./ShowCards.css\";\r\nimport { ShowContext } from \"../../context/ShowContext\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst ShowCards = (props) => {\r\n  const { showData } = useContext(ShowContext);\r\n  const { userData } = useContext(UserContext);\r\n  const [displayedResults, setDisplayedResults] = useState([]);\r\n  const [lastDirection, setLastDirection] = useState();\r\n  const [error, setError] = useState();\r\n  const ENDPOINT =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? window.location.hostname\r\n      : \"https://localhost:5000\";\r\n\r\n  const { creator, roomCode } = props;\r\n\r\n  let socket;\r\n\r\n  const displayedResultsInit = async () => {\r\n    setDisplayedResults(showData.results);\r\n  };\r\n\r\n  useEffect(() => {\r\n    displayedResultsInit();\r\n\r\n    socket = io(ENDPOINT);\r\n    if (creator === \"true\") {\r\n      let data = showData.results;\r\n      socket.emit(\"addResults\", { data, roomCode, creator });\r\n    }\r\n  }, [showData]);\r\n\r\n  const swiped = async (direction, id) => {\r\n    try {\r\n      setLastDirection(direction);\r\n\r\n      // Get data of result with matching Netflix ID\r\n      let swipedShowData = showData.results.find(\r\n        (show) => show.netflixid === id\r\n      );\r\n      swipedShowData.roomid = roomCode;\r\n      swipedShowData.userid = userData.user.id;\r\n\r\n      if (direction === \"right\") {\r\n        await axios.post(\"/api/shows/accepted\", swipedShowData);\r\n      } else if (direction === \"left\") {\r\n        await axios.post(\"/api/shows/rejected\", swipedShowData);\r\n      }\r\n    } catch (err) {\r\n      if (err.response.data.msg) {\r\n        setError(err.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  let resultsArr = displayedResults;\r\n  const outOfFrame = (id) => {\r\n    resultsArr = resultsArr.filter((show) => show.netflixid !== id);\r\n    setDisplayedResults(resultsArr);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {displayedResults.length === 0 ? (\r\n        <h3 className=\"cards__end-message\">End of results</h3>\r\n      ) : (\r\n        showData.results.map((show) => {\r\n          return (\r\n            <TinderCard\r\n              className=\"cards--swipe\"\r\n              key={show.netflixid}\r\n              preventSwipe={[\"up\", \"down\"]}\r\n              onSwipe={(dir) => swiped(dir, show.netflixid)}\r\n              onCardLeftScreen={() => outOfFrame(show.netflixid)}\r\n            >\r\n              <div\r\n                style={{ backgroundImage: `url(${show.image})` }}\r\n                className=\"cards__card\"\r\n              >\r\n                <div className=\"cards__card-content\">\r\n                  {/* Use dangerouslySetInnerHTML since otherwise JSX escapes the HTML and displays the tag */}\r\n                  {/* Note: May want to change in the future, creates possibility for XSS attack */}\r\n                  <div\r\n                    className=\"cards__card-title\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: `<h3>${show.title}</h3>`,\r\n                    }}\r\n                  />\r\n                  <div\r\n                    className=\"cards__card-synopsis\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: `<p>${show.synopsis}</p>`,\r\n                    }}\r\n                  />\r\n                  <div className=\"cards__card-tags\">\r\n                    {show.type ? <p>{show.type}</p> : null}\r\n                    {show.released ? <p>{show.released}</p> : null}\r\n                    {show.runtime ? <p>{show.runtime}</p> : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </TinderCard>\r\n          );\r\n        })\r\n      )}\r\n      {lastDirection ? (\r\n        <h3 key={lastDirection} className=\"cards__swipe-direction\">\r\n          You swiped {lastDirection}\r\n        </h3>\r\n      ) : (\r\n        <h3 className=\"cards__swipe-direction\">Swipe a card to get started!</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowCards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./FinalResultsPage.css\";\r\n\r\nconst FinalResultsPage = (props) => {\r\n  const [acceptedShows, setAcceptedShows] = useState([]);\r\n  const [numberAcceptedShows, setNumberAcceptedShows] = useState(undefined);\r\n  const [recommendedIndex, setRecommendedIndex] = useState(0);\r\n\r\n  const fetchAccepted = async () => {\r\n    let roomid = localStorage.getItem(\"room-id\");\r\n    const res = await axios.get(`/api/shows/accepted/${roomid}`);\r\n    // All of the accepted results for the room, including duplicates\r\n    const rawAcceptedShows = res.data;\r\n\r\n    // All accepted results with duplicates removed\r\n    const acceptedShowData = rawAcceptedShows.filter(\r\n      (v, i, a) => a.findIndex((t) => t.netflixid === v.netflixid) === i\r\n    );\r\n\r\n    // Object with Netflix IDs as keys and number of occurences as values (e.g. 948002: 3)\r\n    let acceptedShowCount = {};\r\n    rawAcceptedShows.forEach((show) => {\r\n      acceptedShowCount[show.netflixid] = acceptedShowCount[show.netflixid]\r\n        ? acceptedShowCount[show.netflixid] + 1\r\n        : 1;\r\n    });\r\n\r\n    // Array with Netflix IDs sorted according to number of occurences (most to least popular)\r\n    let acceptedShowCountArr = [];\r\n    for (let key in acceptedShowCount) {\r\n      acceptedShowCountArr.push({ id: key, count: acceptedShowCount[key] });\r\n    }\r\n    acceptedShowCountArr.sort((a, b) => {\r\n      return b.count - a.count;\r\n    });\r\n    acceptedShowCountArr = acceptedShowCountArr.map((a) => {\r\n      return a.id;\r\n    });\r\n\r\n    // All of the data of the most popular results (most to least popular)\r\n    let finalAcceptedShows = [];\r\n    acceptedShowCountArr.forEach((id) => {\r\n      let obj = acceptedShowData.find((o) => o.netflixid === id);\r\n      finalAcceptedShows.push(obj);\r\n    });\r\n\r\n    setNumberAcceptedShows(finalAcceptedShows.length);\r\n\r\n    setAcceptedShows(finalAcceptedShows);\r\n  };\r\n\r\n  const renderRecommended = () => {\r\n    const recommendedShow = acceptedShows[recommendedIndex];\r\n\r\n    return (\r\n      <div className=\"final-results-page__recommended\">\r\n        <div\r\n          style={{ backgroundImage: `url(${recommendedShow?.image})` }}\r\n          className=\"final-results-page__card\"\r\n        >\r\n          <div className=\"final-results-page__card-content\">\r\n            <div\r\n              className=\"final-results-page__card-title\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: `<h3>${recommendedShow?.title}</h3>`,\r\n              }}\r\n            />\r\n            <div\r\n              className=\"final-results-page__card-synopsis\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: `<p>${recommendedShow?.synopsis}</p>`,\r\n              }}\r\n            />\r\n            <div className=\"final-results-page__card-tags\">\r\n              {recommendedShow?.type ? <p>{recommendedShow?.type}</p> : null}\r\n              {recommendedShow?.released ? (\r\n                <p>{recommendedShow?.released}</p>\r\n              ) : null}\r\n              {recommendedShow?.runtime ? (\r\n                <p>{recommendedShow?.runtime}</p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAccepted();\r\n  }, []);\r\n\r\n  const nextRecommendation = (e) => {\r\n    e.preventDefault();\r\n    setRecommendedIndex(recommendedIndex + 1);\r\n  };\r\n\r\n  const resetRecommendations = (e) => {\r\n    e.preventDefault();\r\n    setRecommendedIndex(0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page final-results-page\">\r\n      {recommendedIndex < numberAcceptedShows ? (\r\n        <div>\r\n          <h2 className=\"final-results-page__header\">\r\n            Based on your group's selections, your recommended movie/show is:\r\n          </h2>\r\n          {renderRecommended()}\r\n          <form className=\"final-results-page__next-button form\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Next recommendation\"\r\n              onClick={(e) => nextRecommendation(e)}\r\n            />\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div className=\"final-results-page__end-view\">\r\n          <h3 className=\"final-results-page__end-message\">\r\n            End of recommendations\r\n          </h3>\r\n          <form className=\"final-results-page__reset-button form\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Click to see again\"\r\n              onClick={(e) => resetRecommendations(e)}\r\n            />\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinalResultsPage;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./TypeSelect.css\";\r\nimport { ShowContext } from \"../../context/ShowContext\";\r\n\r\nconst TypeSelect = (props) => {\r\n  const { showData, setShowData } = useContext(ShowContext);\r\n\r\n  const isMovieHandler = (e) => {\r\n    setShowData((prevData) => ({\r\n      ...prevData,\r\n      isMovie: e.target.checked,\r\n    }));\r\n  };\r\n  const isSeriesHandler = (e) => {\r\n    setShowData((prevData) => ({\r\n      ...prevData,\r\n      isSeries: e.target.checked,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"type-select\">\r\n      <h2>Media Type</h2>\r\n      <div className=\"type-select__container\">\r\n        <div className=\"type-select__checkbox\">\r\n          <label htmlFor=\"movie\">Movie</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"movie\"\r\n            name=\"movie\"\r\n            checked={showData.isMovie}\r\n            onChange={(e) => isMovieHandler(e)}\r\n          />\r\n        </div>\r\n        <div className=\"type-select__checkbox\">\r\n          <label htmlFor=\"series\">Shows</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"series\"\r\n            name=\"series\"\r\n            checked={showData.isSeries}\r\n            onChange={(e) => isSeriesHandler(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TypeSelect;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./GenreItem.css\";\r\n\r\nconst GenreItem = (props) => {\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const handleClick = (genre) => {\r\n    props.updateSelectedGenres(genre);\r\n    props.setKeyword(\"\");\r\n    setSelected(!selected);\r\n  };\r\n\r\n  return (\r\n    <div className=\"genre-item\">\r\n      <button\r\n        key={props.genre.id}\r\n        type=\"button\"\r\n        onClick={() => handleClick(props.genre)}\r\n      >\r\n        {props.genre.name}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenreItem;\r\n","import React from \"react\";\r\n\r\nimport \"./GenreList.css\";\r\nimport GenreItem from \"../GenreItem/GenreItem\";\r\n\r\nconst GenreList = (props) => {\r\n  if (props.keyword && props.keyword.length > 0) {\r\n    return (\r\n      <div className=\"genre-list\">\r\n        {props.genreList.map((genre) => {\r\n          return (\r\n            <GenreItem\r\n              genre={genre}\r\n              updateSelectedGenres={props.updateSelectedGenres}\r\n              setKeyword={props.setKeyword}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GenreList;\r\n","import React, { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./SelectedGenreItem.css\";\r\nimport { ShowContext } from \"../../context/ShowContext\";\r\n\r\nconst SelectedGenreItem = (props) => {\r\n  const { showData, setShowData } = useContext(ShowContext);\r\n\r\n  const removeGenre = (genre) => {\r\n    const filtered = showData.selectedGenres.filter((item) => {\r\n      return item.id !== genre.id;\r\n    });\r\n    setShowData((prevData) => ({ ...prevData, selectedGenres: filtered }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"selected-genre\">\r\n      <div className=\"remove-icon\" onClick={() => removeGenre(props.genre)}>\r\n        <FontAwesomeIcon icon={faMinus} />\r\n      </div>\r\n      {props.genre.name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedGenreItem;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./SelectedGenresList.css\";\r\nimport { ShowContext } from \"../../context/ShowContext\";\r\nimport SelectedGenreItem from \"../SelectedGenreItem/SelectedGenreItem\";\r\n\r\nconst SelectedGenresList = (props) => {\r\n  const { showData } = useContext(ShowContext);\r\n\r\n  return (\r\n    <div className=\"selected-genres-list\">\r\n      <p>\r\n        <b>Selected</b>\r\n      </p>\r\n      {showData.selectedGenres.length === 0 ? (\r\n        <p>No genres selected</p>\r\n      ) : (\r\n        showData.selectedGenres.map((genre) => {\r\n          return <SelectedGenreItem genre={genre} />;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedGenresList;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./GenreSelect.css\";\r\nimport { ShowContext } from \"../../context/ShowContext\";\r\nimport GenreList from \"../GenreList/GenreList\";\r\nimport SelectedGenresList from \"../SelectedGenresList/SelectedGenresList\";\r\n\r\nconst GenreSelect = (props) => {\r\n  const { showData, setShowData } = useContext(ShowContext);\r\n\r\n  const updateGenreList = (keyword) => {\r\n    props.setKeyword(keyword);\r\n    const filtered = props.genreListDefault\r\n      .filter((genre) => {\r\n        return genre.name.toLowerCase().includes(keyword.toLowerCase());\r\n      })\r\n      .slice(0, 5);\r\n    props.setGenreList(filtered);\r\n  };\r\n\r\n  const updateSelectedGenres = (genre) => {\r\n    if (\r\n      !showData.selectedGenres.some(\r\n        (selectedGenre) => selectedGenre.id === genre.id\r\n      )\r\n    ) {\r\n      setShowData((prevData) => ({\r\n        ...prevData,\r\n        selectedGenres: [...prevData.selectedGenres, genre],\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"genre-select\">\r\n      <h2>Genres</h2>\r\n      <div className=\"genre-select__search-selected\">\r\n        <div className=\"genre-select__search\">\r\n          <input\r\n            className=\"genre-select__search-input\"\r\n            type=\"search\"\r\n            value={props.keyword}\r\n            placeholder=\"Search Genre\"\r\n            onChange={(e) => updateGenreList(e.target.value)}\r\n          />\r\n          <GenreList\r\n            keyword={props.keyword}\r\n            setKeyword={props.setKeyword}\r\n            genreList={props.genreList}\r\n            updateSelectedGenres={updateSelectedGenres}\r\n          />\r\n        </div>\r\n        <SelectedGenresList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenreSelect;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport HomePage from \"./pages/HomePage/HomePage\";\r\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\r\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\r\nimport ResultsPage from \"./pages/ResultsPage/ResultsPage\";\r\nimport FinalResultsPage from \"./pages/FinalResultsPage/FinalResultsPage\";\r\nimport JoinSessionPage from \"./pages/JoinSessionPage/JoinSessionPage\";\r\nimport SessionPage from \"./pages/SessionPage/SessionPage\";\r\nimport WaitingPage from \"./pages/WaitingPage/WaitingPage\";\r\n\r\nconst Routes = () => {\r\n  const routes = [\r\n    { name: \"Home\", path: \"/\", Component: HomePage },\r\n    { name: \"Register\", path: \"/register\", Component: RegisterPage },\r\n    { name: \"Login\", path: \"/login\", Component: LoginPage },\r\n    { name: \"Results\", path: \"/results\", Component: ResultsPage },\r\n    { name: \"FinalResults\", path: \"/final\", Component: FinalResultsPage },\r\n    { name: \"JoinSession\", path: \"/join\", Component: JoinSessionPage },\r\n    { name: \"Session\", path: \"/session\", Component: SessionPage },\r\n    { name: \"Waiting\", path: \"/waiting\", Component: WaitingPage },\r\n  ];\r\n\r\n  const renderRoutes = () => {\r\n    return routes.map((route) => {\r\n      return (\r\n        <Route\r\n          key={route.name}\r\n          exact\r\n          path={route.path}\r\n          component={route.Component}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return <Switch>{renderRoutes()}</Switch>;\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./AuthOptions.css\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nconst AuthOptions = (props) => {\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const register = () => {\r\n    history.push(\"/register\");\r\n  };\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const logout = () => {\r\n    setUserData({ token: undefined, user: undefined });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n    // Redirect user to the Home Page\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"auth-options\">\r\n      {userData.user ? (\r\n        <button onClick={logout}>Logout</button>\r\n      ) : (\r\n        <>\r\n          <button onClick={register}>Register</button>\r\n          <button onClick={login}>Login</button>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthOptions;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Header.css\";\r\nimport AuthOptions from \"../AuthOptions/AuthOptions\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <h1 className=\"header__title\">flicker</h1>\r\n      </Link>\r\n      <AuthOptions />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport { ShowProvider } from \"./context/ShowContext\";\r\nimport Routes from \"./App.routes\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <UserProvider>\r\n        <ShowProvider>\r\n          <Router>\r\n            <Header />\r\n            <div className=\"container\">\r\n              <Routes />\r\n            </div>\r\n          </Router>\r\n        </ShowProvider>\r\n      </UserProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}